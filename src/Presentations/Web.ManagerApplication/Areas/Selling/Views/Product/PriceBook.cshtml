@model Model.ProductSearch
@{
    var userId = Context.Request.Query["userId"].ToString();
}
<style>
    .pagination {
        float: right;
    }
</style>
<div class="card mb-2">
    <div class="card-body">
        <div class="row">

            <div class="col-md-3">
                <div class="">
                    <label for="" asp-for="idCategory">Danh mục hàng hóa</label>
                    <select class="form-control idCategory" name="idCategory">
                        <opiton></opiton>
                    </select>
                </div>
            </div>
         
            <div class="col-md-3">
                <div class="">
                    <label>Mã sản phẩm</label>
                    <input type="text" name="textSearch" id="code" placeholder="Mã sản phẩm" class="form-control">
                </div>
            </div>

            <div class="col-md-6">
                <div class="">
                    <label>Tên sản phẩm</label>
                    <input type="text" name="textSearch" id="textSearch" placeholder="Tên sản phẩm......" class="form-control">
                </div>
            </div>
        </div>

    </div>
    <div class="card-footer text-center" style=" display: block;">
        <button class="ladda-button mb-2 mr-2 btn btn-primary" id="btnSearch" type="button" data-style="expand-left">
            <span class="ladda-label"><i class="fas fa-search mr-2"></i> Tìm kiếm</span>

            <span class="ladda-spinner"></span>
        </button>
    </div>
</div>

<div class="card">
    <div class="listactionPricebook">
        <button class="btn btn-primary btn-updatevat"><i class="fas fa-edit mr-2"></i>Cập nhật thuế</button>
    </div>
    <div id="viewAll" class="card-body">
        <table class="table table-bordered table-striped" id="dataTable">
            <thead>
                <tr>
                    <th></th>
                    <th>Mã hàng</th>
                    <th>Tên hàng</th>
                    
                    <th>Danh mục</th>
                    <th>Giá bán</th>
                   
                    <th>Giá bán mới</th>
                    <th>Thuế VAT</th>
                    <th>Đơn giá trước thuế</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>
@section Scripts
    {
    <script>
        $(document).ready(function () {
            loaddataSelect2CustomsTempalte("/Api/Handling/GetAllCategoryProduct?IsPos=true", ".idCategory", @Model.idCategory, "Tất cả");
            dataTableOut = $('#dataTable').DataTable({
                "responsive": true,
                "processing": true,
                stateSave: true,
                "pagingType": "full_numbers",
                "serverSide": true,
                "filter": false,
                "rowId": "id",
                "orderMulti": false,
                "ordering": false,
                // "order": [[0, "desc"]],
                "language": {
                    "info": "Hiển thị _START_ đến _END_ dòng của tổng _TOTAL_ dòng",
                    "infoEmpty": "Hiển thị 0 đến 0 dòng của tổng 0 dòng",
                    "zeroRecords": "Không tìm thấy dữ liệu nào",
                    "emptyTable": "Không có dữ liệu",
                    "search": "Tìm kiếm:",
                    "processing": "Đang xử lý...",
                    "lengthMenu": "Hiển thị _MENU_ dòng",
                    "loadingRecords": "Vui lòng chờ...",
                    "paginate": {
                        "first": "Đầu tiên",
                        "last": "Cuối cùng",
                        "next": "Tiếp theo",
                        "previous": "Về trước"
                    },
                },
                "pageLength": 10,
                "lengthMenu": [[10, 25, 50, 100, 200, 500], [10, 25, 50, 100, 200, 500]],
                "buttons": [
                    {
                        text: 'Reload',
                        action: function (e, dt, node, config) {
                            dataTableOut.ajax.reload();
                        }
                    }
                ], 
                'select': {
                    'style': 'multi',
                    selector: 'td:first-child'
                },
                "columnDefs": [

                    {
                        'targets': 0,
                        'checkboxes': {
                            'selectRow': true
                        }
                    },
                    { className: "text-right", "targets": [4, 5] },
                    { className: "text-center", "targets": [-1,0] },

                    { responsivePriority: 2, targets: [-1, 0] },////define hiển thị mặc định column 1


                    {
                        "searchable": false,
                        "orderable": false,
                        "targets": [-1, 0],

                    },
                    { "width": "100px", "targets": [-1] },
                    { "width": "130px", "targets": [6] },
                    { "width": "100px", "targets": [5] }

                ],
                ajax: {
                    url: "/Selling/product/LoadAll",
                    type: "POST",
                    datatype: "json",
                    data: {
                        Name: function () { return $('#textSearch').val().trim() },
                        code: function () { return $('#code').val().trim() },
                        idCategory: function () { return $('.idCategory').val() },

                        // Name: function () { return $('#CompanyName').val().trim() },
                    }
                }, 
                "drawCallback": function (settings) {
                    $('.dt-select2').select2({
                        dropdownCssClass: "selectCustome100",
                    }).on("change", function (e) {
                        let value = parseFloat($(this).val());
                        let pricenovat =0;
                        if (value==-3){
                            value =0;
                             $(this).parents("tr").find(".priceNoVAT").val(0);
                        }else{
                            let price = parseFloat($(this).parents("tr").find(".amount").val().replaceAll(",", ""));
                            let vatamount = (value / 100) + 1;
                            pricenovat = parseFloat((price / vatamount).toFixed(3));
                            $(this).parents("tr").find(".priceNoVAT").val(pricenovat.format0VND(3, 3))
                        }
                        Product.UpdateVATProduct(this, pricenovat);
                    });
                    $('table#dataTable tbody input.amount').unbind();
                    $('table#dataTable tbody input.number3')
                        .each(function (i, item) {
                            $(this).data("am", this.value);//am laf amount
                            let dataid = $(this).data("id");
                            $(this).removeAttr("id");
                            $(this).data("id", dataid);
                            fnInitialFormatNumber(this);
                        }).ForceNumericOnly()
                        .focus(function () {
                            var _val = $(this).val();
                            $(this).val(_val.replaceAll(',', ''));
                        })
                        .focusout(function () {
                            fnFocusOut(this);
                        });

                    $('table#dataTable tbody input.amount').change(function () {
                            Product.UpdatePriceProduct(this);
                        });
                   
                },
                
                "columns": [
                    { "data": "id", "name": "Id", "autoWidth": true },
                    { "data": "code", "name": "code", "autoWidth": true },
                    {
                        "data": "name", "name": "Name", "autoWidth": true,
                       
                    },
                   
                    { "data": "nameCategory", "name": "NameCategory", "autoWidth": true },
                    {
                        "data": "_Price", "name": "Price", "autoWidth": true,
                        render: $.fn.dataTable.render.number(',', '.', 0)
                    },
                    
                    {
                        "data": "_Price", "name": "Price",
                         "render": function (data, type, full, meta) {
                            return "<input type='text' class='form-control text-right amount number3'  data-id=" + full .id+ " value='" + parseFloat(full._Price) + "'/>";
                        }
                    }, 
                    {
                        "data": "vatRate", "name": "VATRate", "autoWidth": true,
                        "render": function (data, type, full, meta) {
                            let html = `<select class="dt-select2 vatrate" style="width:100px" data-id="` + full .id+ `">
                                            <option value="-3" `+ (full.vatRate == -3 ? "selected" : "") + `>Không thuế</option>
                                            <option value="0" `+ (full.vatRate == 0 ? "selected" : "") + `>0%</option>
                                            <option value="5" `+ (full.vatRate == 5 ? "selected" : "") + `>5%</option>
                                            <option value="8" `+ (full.vatRate == 8 ? "selected" : "") + `>8%</option>
                                            <option value="10" `+ (full.vatRate == 10 ? "selected" : "") + `>10%</option>
                                       </select>`;
                            return html;
                        }
                    },
                    {
                        "data": "priceNoVAT", "name": "PriceNoVAT",
                        "render": function (data, type, full, meta) {

                            return "<input type='text' class='form-control text-right priceNoVAT number3' readonly data-id=" + full.id + " data-pricenovat=" + parseFloat(full.priceNoVAT) + " value='" + parseFloat(full.priceNoVAT) + "'/>";
                        }
                    }

                ], 
                //drawCallback: function () {
                //    $('.dt-select2').select2({
                //        dropdownCssClass: "selectUserPos",
                //    });
                //    $('table#dataTable tbody input.number3').unbind();
                //    $('table#dataTable tbody input.number3')
                //        .each(function (i, item) {
                //            $(this).data("am", this.value);//am laf amount
                //            let dataid = $(this).data("id");
                //            $(this).removeAttr("id");
                //            $(this).data("id", dataid);
                //            fnInitialFormatNumber(this);
                //        }).ForceNumericOnly()
                //        .focus(function () {
                //            debugger
                //            var _val = $(this).val();
                //            $(this).val(_val.replaceAll(',', ''));
                //        })
                //        .focusout(function () {
                //            fnFocusOut(this);
                //        });
                //    $('table#dataTable tbody input').unbind();
                //    $('table#dataTable tbody input').change(function () {
                //        Product.UpdatePriceProduct(this);
                //    });
                //},
                initComplete() {
                    $(".listactionPricebook").show();
                    
                }

            });
            Product.loadUpdateVATMutiInPriceBook();
            $('#reload').on('click', function () {
                dataTableOut.ajax.reload(null, false);

            });
            $('input').keyup(function (e) {
                if (e.keyCode == 13) {
                    dataTableOut.ajax.reload(null, false);
                }
            });
        });

            //$(document).ready(function () {

            //    loadData();
            //    $('#reload').on('click', function () {
            //        loadData();
            //    });
            //});


    </script>
}