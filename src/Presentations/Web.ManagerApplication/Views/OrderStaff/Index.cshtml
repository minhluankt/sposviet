@using System.Security.Claims;
@inject UserManager<ApplicationUser> _userManager
@{
    Layout = null;
    var userlogin = await _userManager.GetUserAsync(User);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Nhân viên order</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, shrink-to-fit=no" />
    <meta name="description" content="Wide selection of cards with multiple styles, borders, actions and hover effects.">
    <meta name="msapplication-tap-highlight" content="no">
    <partial name="Admin/_Styles" />
    <script src="~/lib/jquery/jquery.js"></script>
    <style>
        .select2-dropdown {
            z-index: 1060;
        }

        .modal-header .close {
            margin: 0;
            padding: 0px;
        }

        .modal-header {
            align-items: center;
        }

        h4 {
            margin-bottom: 0px;
        }

        :focus-visible {
            outline: -webkit-focus-ring-color auto 0px;
        }
    </style>
</head>
<body class="bodyorderstaff">
    <div id="orderstaff">
        <div class="top-authen">
            <img src="~/images/logo1.png">
            <div class="frofile">
                Xin chào! <b>@User.Identity.Name</b>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-user-shield"></i>
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="/Identity/Account/Logout?returnUrl=@Url.Page("/account/login", new { area = "identity" })"><i class="fa fa-sign-out mr-2"></i>  Đăng xuất</a>
                        @if (await _userManager.IsInRoleAsync(userlogin, Application.Enums.Roles.SuperAdmin.ToString()) || await _userManager.IsInRoleAsync(userlogin, Application.Enums.Roles.quanly.ToString()))
                        {
                            <a class="dropdown-item" href="/Selling/Dashboard"><i class="fa fa-sign-out mr-2"></i> Quản lý</a>
                        }
                        <a class="dropdown-item" href="/manifest.webmanifest"><i class="fa fa-sign-out mr-2"></i> Reset cài đặt app</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="topbuton">
            <button type="button" class="btn btn-primary">
                <span><i class="fas fa-table mr-2"></i>   Bàn/Phòng</span>
                <span class="tablename required">--Chưa chọn bàn--</span>
            </button>

            <button type="button" class="btn btn-success">
                <i class="fas fa-utensils mr-2"></i>  Thực đơn
            </button>
            <div id="dataListFood" class="d-none">
                <div class="dataArea dataCategoryleft">
                    <ul class="lstcategoryfood">
                        @* <li class="active"><a href="javascript:void(0)"><span>5</span> Tất cả</a></li>
                        <li><a href="javascript:void(0)"><span>5</span> Mang về</a></li>*@
                    </ul>
                </div>
                <div></div>
                <div class="datatable">
                    <ul id="lstfood" class="ul-nonestyle">
                        <li class="" style="display: flex;">
                            <div class="ribbon ribbon-primary float-end"> 20.000</div>

                            <img src="./images/no-img.png" />
                            <div class="conent-botom">
                                <span>Cafe</span>
                            </div>
                        </li>
                        <li class="" style="display: flex;">
                            <div class="ribbon ribbon-primary float-end">20.000</div>

                            <img src="./images/no-img.png" />
                            <div class="conent-botom">
                                <span>Cafe</span>
                            </div>
                        </li>
                        <li class="" style="display: flex;">
                            <div class="ribbon ribbon-primary float-end">20.000</div>

                            <img src="./images/no-img.png" />
                            <div class="conent-botom">
                                <span>Cafe</span>
                            </div>
                        </li>
                        <li class="" style="display: flex;">
                            <div class="ribbon ribbon-primary float-end">20.000</div>

                            <img src="./images/no-img.png" />
                            <div class="conent-botom">
                                <span>Cafe</span>
                            </div>
                        </li>

                        @* <li class="active" style="display: flex;">
                        <div class="ribbon-two ribbon-two-primary"><span>8</span></div>
                        <i class="fas fa-utensils"></i>
                        <b>Bàn 7</b>
                        </li>*@


                    </ul>
                </div>
            </div>
            <div id="dataTableRoom" class="d-none">
                <div class="dataArea dataCategoryleft">
                    <ul class="litstbale">
                        @*  <li class="active"><a href="javascript:void(0)"><span>5</span> Tất cả</a></li>
                        <li><a href="javascript:void(0)"><span>5</span> Mang về</a></li>*@
                    </ul>
                </div>
                <div></div>
                <div class="datatable">
                    <ul id="lst-roomandtable" class="ul-nonestyle">

                        <li class="mangve" style="display: flex;">
                            <i class="fas fa-baby-carriage"></i>

                        </li>
                        <li style="display: flex;">
                            <i class="fas fa-utensils"></i>

                        </li>
                        <li style="display: flex;">
                            <i class="fas fa-utensils"></i>

                        </li>
                        <li style="display: flex;">
                            <i class="fas fa-utensils"></i>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        @* <div class="p-2">

        <input type="text" placeholder="Tìm kiếm món" class="form-control txtSearchfood" />
        </div>*@
        <div class="actionstaff">

            <button class="btn-fullScreen"><i class="fas fa-expand"></i></button>
        </div>
        <div class="bodybill">
            <table class="table">
                <thead>
                    <tr>
                        <th class="ordercode">Mã đơn: @User.Identity.Name</th>
                        <th style="    width: 123px;" class="text-center">SL</th>
                    </tr>
                </thead>
                <tbody class="itemorderbody">
                    <tr class="tr-nodata">
                        <td colspan="2">
                            <div class="no-order">
                                <img src="~/images/ristorante_old.png" />
                                <b>Chưa có món nào được chọn</b>
                                <span>Vui lòng chọn món trong thực đơn</span>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="bottomFix">
            <div class="btn-paymentactionstaff">
                <div class="dropdowns">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu23" data-toggle="dropdowns" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-bars"></i>
                    </button>
                  @*  <div class="dropdown-menu" aria-labelledby="dropdownMenu23">
                        <button class="dropdown-item" type="button"><i class="fas fa-money-check-alt mr-2"></i> Thanh toán</button>
                    </div>*@
                </div>
            </div>
           <div class="content-amountandnotify">
                <div class="leftcol">
                    <span class="text-am">Tổng tiền</span>
                    <span class="value-am amountFull">0đ</span>
                </div>
                <div class="rightcol">
                    <button class="btn btn-danger btn-notif" disabled>
                        <i class="fas fa-bell mr-2"></i> Thông báo bếp
                    </button>
                </div>
           </div>
        </div>
    </div>
    <div id="loadingpos">
        <span>
            <img src="~/images/preview.gif" /><br />
            Đang tải dữ liệu
        </span>
    </div>
    <script type="text/javascript" src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withAutomaticReconnect({
                nextRetryDelayInMilliseconds: retryContext => {
                    if (retryContext.elapsedMilliseconds < 36000000) { //600 phút nhé là 10 tiếng
                        console.log("đang conncet");
                        // If we've been reconnecting for less than 60 seconds so far,
                        // wait between 0 and 10 seconds before the next reconnect attempt.
                        //return Math.random() * 3000;
                        return 1000;
                    } else {
                        // If we've been reconnecting for more than 60 seconds so far, stop reconnecting.
                        return null;
                    }
                }
            })
            .withUrl('/Signal')
            .build();
    </script>
    <partial name="Admin/_Scripts" />
    <script>
        //toggleFullScreen();
        $(".btn-fullScreen").click(function () {
            $(this).find("i").toggleClass("fa-compress");
            $(this).find("i").toggleClass("fa-expand");
            toggleFullScreen();
        });

        document.onreadystatechange = function () {
            var state = document.readyState
            if (state == 'complete') {
                setTimeout(function () {
                    document.getElementById('loadingpos');
                    document.getElementById('loadingpos').style.visibility = "hidden";
                }, 100);
            }
        }


        posStaff.loadeventSelectttable();
        posStaff.eventIntwindow();
        posStaff.loadeventClickbtnFood();

        var interval = null;

        function start() {
            try {
                connection.start()
                    .then(function () {
                        console.assert(connection.state === signalR.HubConnectionState.Connected);
                        connection.invoke('LoadOrdertable', EnumTypePrint.TEST, "connect dữ liệu nhân viên");
                        connection.invoke('FeedbackBepToStaff',"", "TEST", 0);
                        //console.log("SignalR Connected.");
                        clearInterval(interval);
                    })
                    .catch(error => {
                        // loadeventPos.NotifyChitken();
                        console.error(error.message);
                    });

            } catch (err) {
                console.assert(connection.state === signalR.HubConnectionState.Disconnected);
                console.log(err);
                setTimeout(() => start(), 5000);
            }
        };
        // Create a function that the hub can call to broadcast messages.
        connection.on('FeedbackBepToStaff', function (datas) {
            debugger
            if (datas == "TEST") {
                console.log("Test 3");
            } else {
                let data = JSON.parse(datas);
                if (!data.IsValid) {
                    posStaff.loadEventAffterSendReject(data.Mess);
                } else {

                }
            }
        });
        connection.on('addMessageCHITKENBYPOS', function (isValid) {
            if (isValid) {
                toastr.success("Món cam!")
            }
        });

        connection.onclose(async () => {
            console.log("onclose đang connect");
            interval = setInterval(function () {
                start();
            }, 2000);

        });
        // Transport fallback functionality is now built into start.
        connection.start()
            .then(function () {
                connection.invoke('LoadOrdertable', EnumTypePrint.TEST, "connect dữ liệu nhân viên");
                console.log('connection started');
            })
            .catch(error => {
                // loadeventPos.NotifyChitken();
                // console.error(error.message);
            });

    </script>
    @await Component.InvokeAsync("Notyf")
</body>
</html>