@model Model.ProductModelView
@using Application.Constants
@using HelperLibrary;
@using SystemVariable
@using Domain.Entities
@using Application.Enums
@using Web.ManagerApplication.Views.Shared.Components.FormSendMail
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    string url = Context.Request.Scheme + "://" + Context.Request.Host + Context.Request.Path;
}
<link href="~/lib/swiper/swiper-bundle.min.css" rel="stylesheet" />
<div id="simpleModal" class="modal model-slide-product">
    <div class="modal-content">
        <div class="modal-body">
            <span class="closeBtn">&times;</span>
            <!-- Swiper modal -->
            <div id="swiper-container-modal" class="swiper-container-modal">
                <div class="swiper-wrapper">
                    @foreach (var item in Model.Product.UploadImgProducts)
                    {
                        <div class="swiper-slide swiper-slide-modal">
                            <div class="swiper-zoom-container">
                                <img class="swiper-lazy swiper-lazy-modal" src="~/@(SystemVariableHelper.FolderUpload)@(FolderUploadConstants.Product)/@(item.FileName)" />
                            </div>
                        </div>
                    }
                </div>
                <!-- Add Pagination -->
                <div class="swiper-button-prev2">
                    <i class="fas fa-chevron-left"></i>
                </div>
                <div class="swiper-button-next2">
                    <i class="fas fa-angle-right"></i>
                </div>
                <div class="swiper-pagination"></div>
            </div>

            <div thumbsSlider="" class="swiper mySwipermodel">
                <div class="swiper-wrapper">
                    @foreach (var item in Model.Product.UploadImgProducts)
                    {
                        <div class="swiper-slide">
                            <img src="~/@(SystemVariableHelper.FolderUpload)@(FolderUploadConstants.Product)/@(item.FileName)" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<section class="container mt-3 section-detail-product" id="DetailtProduct">
    <div class="row">
        <div class="header-detail">
            <div class="row">
                <div class="col-lg-5 col-md-6">

                    <div class="col-img">
                        <div class="swiper mySwiper2 slide-detail-product">
                            <!-- Additional required wrapper -->
                            <div class="swiper-wrapper">
                                <!-- Slides -->
                                @foreach (var item in Model.Product.UploadImgProducts)
                                {
                                    <div class="swiper-slide">
                                        <img src="~/Upload/Product/@item.FileName" class="swiper-slide-img" />
                                    </div>
                                }

                            </div>
                            <!-- If we need pagination -->
                            <!-- If we need navigation buttons -->
                            <div class="swiper-button-prev">
                                <i class="fas fa-chevron-left"></i>
                            </div>
                            <div class="swiper-button-next">
                                <i class="fas fa-angle-right"></i>
                            </div>
                            <div class="swiper-pagination"></div>
                            <!-- If we need scrollbar -->
                            @* <div class="swiper-scrollbar"></div>*@
                        </div>

                        <div thumbsSlider="" class="swiper mySwiper-thumbs">
                            <div class="swiper-wrapper">
                                @foreach (var item in Model.Product.UploadImgProducts)
                                {
                                    <div class="swiper-slide">
                                        <img src=~/Upload/Product/@item.FileName />
                                    </div>
                                }
                            </div>
                        </div>

                    </div>

                </div>
                <div class="col-md-6 col-lg-7">
                    <div class="body-content">
                        <div class="col-content">
                            <h1 class="title-head">@Model.Product.Name</h1>

                            @if (!string.IsNullOrEmpty(Model.Product.Title))
                            {
                                <div class="Product-Title">@Html.Raw(Model.Product.Title)</div>
                            }
                            <span class="item-block status">
                                Tình trạng:
                                <b class="text-primary">Còn hàng</b>
                            </span>
                            @if (!string.IsNullOrEmpty(Model.Product.Packing))
                            {
                                <span class="item-block">
                                    Quy cách:
                                    <b class="text-primary">@Model.Product.Packing</b>
                                </span>

                            }

                            <div class="row">
                                <div class="col-lg-7 col-md-12">
                                    <div class="price-container">
                                        @if (Model.Product.isRunPromotion)
                                        {
                                            <span class="current_price">
                                                @if (Model.Product.PriceDiscountRun > 0)
                                                {
                                                    @:@(Model.Product.PriceDiscount.ToString("N0"))₫
                                                }
                                                else if (Model.Product.DiscountRun > 0)
                                                {
                                                    @:@((Model.Product.Price - (Convert.ToDecimal((Model.Product.DiscountRun/100))*Model.Product.Price)).ToString("N0"))₫
                                                }
                                            </span>
                                            <span class="old_price">@(Model.Product.Price.ToString("N0"))₫</span>
                                            <span class="discount">@(Model.Product.DiscountRun)%</span>
                                        }
                                        else if (Model.Product.isPromotion && (Model.Product.ExpirationDateDiscount.HasValue && Model.Product.ExpirationDateDiscount.Value >= DateTime.Now))
                                        {
                                            <span class="current_price">
                                                @if (Model.Product.PriceDiscount > 0)
                                                {
                                                    @:@(Model.Product.PriceDiscount.ToString("N0"))₫
                                                }
                                                else if (Model.Product.Discount > 0)
                                                {
                                                    @:@((Model.Product.Price - (Convert.ToDecimal((Model.Product.Discount/100))*Model.Product.Price)).ToString("N0"))₫
                                                }
                                            </span>
                                            <span class="old_price">@(Model.Product.Price.ToString("N0"))₫</span>
                                            <span class="discount">@(Model.Product.Discount)%</span>
                                        }
                                        else
                                        {
                                            <span class="current_price">@(Model.Product.Price.ToString("N0"))₫</span>

                                        }
                                        @* <span class="new"></span>*@
                                    </div>


                                    @if (!string.IsNullOrEmpty(Model.Product.Promotion))
                                    {
                                        <div class="Promotion">
                                            <div class="title-km"><i class="fas fa-gift"></i> Khuyến mãi</div>
                                            <div class="body">
                                                @Html.Raw(Model.Product.Promotion)
                                            </div>
                                        </div>

                                    }
                                    <div class="quantity-col">
                                        <label>Số lượng:</label>
                                        <div class="custom custom-btn-numbers form-control">
                                            <button onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN(qty) & qty > 1 ) result.value--;return false;" class="btn-minus btn-cts" type="button">–</button>
                                            <input type="text" class="qty input-text priceFormat" id="qty" name="quantity" size="4" value="1" maxlength="3">
                                            <button onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN(qty)) result.value++;return false;" class="btn-plus btn-cts" type="button">+</button>
                                        </div>
                                    </div>
                                    <div class="btn-payment">
                                        <button class="btn-colorChooser btn btn-block btnaddCart-detaiprod" data-price="@Model.Product.Price.ToString("N0")" data-img="../@(SystemVariableHelper.FolderUpload)@(FolderUploadConstants.Product)/@Model.Product.Img" data-name="@Model.Product.Name" data-id="@(Model.Product.Id)">
                                            <span class="txt-main">Thêm vào giỏ</span>
                                            <span class="text-add">Đặt mua giao hàng tận nơi</span>
                                        </button>
                                    </div>
                                </div>
                                <div class="col-lg-5 col-md-5 d-md-none d-lg-block">
                                    <div class="onlineSupport">
                                        <h3 class="header-title">Chúng tôi luôn sẵn sàng để giúp đỡ bạn</h3>
                                        <img src="~/images/support.png" />
                                        <h3 class="supportTitle3">Để được hỗ trợ tốt nhất. Hãy gọi</h3>
                                        <div class="phoneNumber"> <a href="tel:0905234655" title="0905 234 655">0905 234 655</a> </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row-detail-content">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs justify-content-center" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#home" role="tab">
                                <i class="now-ui-icons objects_umbrella-13"></i> Mô tả sản phẩm
                            </a>
                        </li>
                        @if (!string.IsNullOrEmpty(Model.Product.TechnicialParameter))
                        {
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#TechnicialParameter" role="tab">
                                    <i class="now-ui-icons objects_umbrella-13"></i> Thông số kỹ thuật
                                </a>
                            </li>
                        }
                        @* <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#profile" role="tab">
                            <i class="now-ui-icons shopping_cart-simple"></i> Profile
                            </a>
                            </li>*@
                    </ul>
                </div>
                <div class="card-body">
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div class="tab-pane active" id="home" role="tabpanel">
                            <div class="body-Description">
                                @if (!string.IsNullOrEmpty(Model.Product.Description))
                                {
                                    @Html.Raw(Model.Product.Description)
                                }
                                else
                                {
                                    <span>Nội dung đang được cập nhật</span>
                                }
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Product.TechnicialParameter))
                        {
                            <div class="tab-pane" id="TechnicialParameter" role="tabpanel">
                                <div class="body-Description">
                                    @Html.Raw(Model.Product.TechnicialParameter)
                                </div>
                            </div>
                        }

                        @*  <div class="tab-pane" id="profile" role="tabpanel">
                            <p> I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at. </p>
                            </div>
                        *@
                    </div>
                </div>
            </div>
        </div>

        <div class="index-block-product">
            <div class="header-block clearfix">
                <h3><a href="#" title="">Sản phẩm liên quan</a></h3>

            </div>
            <div class="block-product">
                <div class="col-row load-list-product-lq">
                    @for (var i = 0; i < 10; i++)
                    {
                        <div class="col-product col-item">
                            <div class="body">
                                <div class="product_thumb">
                                    <ul class="loading-animated-list">
                                        <li class="text fade-loading-animated product_thumb" style="width: 100%;"></li>
                                    </ul>
                                </div>
                                <div class="product_content mt-2">
                                    <ul class="loading-animated-list">
                                        <li class="text fade-loading-animated" style="width: 70%;"></li>
                                        <li class="text fade-loading-animated" style="width: 50%;"></li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="panel addcomment">
            <div class="panel-body">
                <h4>Hỏi & Đáp về <b>@Model.Product.Name</b></h4>
                <textarea class="form-control" rows="3" id="commentproduct" placeholder="Nhập nội dung của bạn!"></textarea>
                <div class="mar-top clearfix">
                    <button class="btn btn-sm btn-primary pull-right btn-addcomment" data-id-page-comment="@Model.Product.Id" type="button"><i class="fa fa-pencil fa-fw"></i> Gửi bình luận</button>
                    @*       <a class="btn btn-trans btn-icon fa fa-video-camera add-tooltip" href="#"></a>
                        <a class="btn btn-trans btn-icon fa fa-camera add-tooltip" href="#"></a>
                        <a class="btn btn-trans btn-icon fa fa-file add-tooltip" href="#"></a>*@
                </div>
            </div>
        </div>
        @if (Model.Product.Comments.Count() > 0)
        {

            List<Comment> lstcom = Model.Product.Comments.Where(x => x.IdPattern == 0).OrderByDescending(x => x.Id).ToList();


            <div class="panel answerComment">
                <div class="panel-body">
                    <div class="media-block">
                        @foreach (var item in lstcom)
                        {
                            string decription = string.Empty;
                            switch ((DeviceType)item.DeviceType)
                            {
                                case DeviceType.IsDesktop:
                                    decription = "<i class='fa fa-desktop'></i> PC" + " - " + LibraryCommon.TimeAgo(item.CreateDate);
                                    break;
                                case DeviceType.IsMobile:
                                    decription = "<i class='fa fa-mobile fa-lg'></i> Mobile " + item.OS.Split('/')[0].Replace("Name:", "").Trim() + " - " + LibraryCommon.TimeAgo(item.CreateDate);
                                    break;
                                case DeviceType.IsTablet:
                                    decription = "<i class='fa fa-tablet fa-lg'></i> Tablet " + item.OS.Split('/')[0].Replace("Name:", "").Trim() + " - " + LibraryCommon.TimeAgo(item.CreateDate);
                                    break;
                            }
                            <a class="media-left" href="#">
                                @if (item.Customer == null || string.IsNullOrEmpty(item.Customer.Image))
                                {
                                    <img class="img-circle img-sm" alt="Profile Picture" src="~/images/user.png">
                                }
                                else
                                {
                                    <img class="img-circle img-sm" alt="Profile Picture" src="~/Upload/Customer/@item.Customer.Image">
                                }
                            </a>
                            <div class="media-body">

                                <div class="mar-btm">
                                    <a href="#" class="btn-link text-semibold media-heading box-inline">@item.FullName</a>
                                    <p class="text-muted text-sm">
                                        @Html.Raw(decription)
                                    </p>
                                </div>
                                <p>@item.Content</p>
                                <div class="pad-ver">
                                    @*<div class="btn-group">
                                        <a class="btn btn-sm btn-default btn-hover-success" href="#"><i class="fa fa-thumbs-up"></i></a>
                                        <a class="btn btn-sm btn-default btn-hover-danger" href="#"><i class="fa fa-thumbs-down"></i></a>
                                        </div>*@
                                    <a class="btn btn-sm btn-default btn-hover-primary btn-reply" data-pro="@Model.Product.Id" data-name="@item.FullName" data-idname="@item.IdCustomer" data-pattenid="@item.Id" href="javascript:void(0)">Trả lời</a>
                                </div>
                                <hr>
                                @{
                                    List<Comment> lstchil = Model.Product.Comments.Where(x => x.IdPattern == item.Id).OrderBy(x => x.Id).ToList();
                                    // List<int> lstid = lstchil.Select(x => x.Id).ToList();

                                }

                                @while (lstchil.Count() > 0)
                                {
                                    var itemchill = lstchil.Last();
                                    var getchill = Model.Product.Comments.Where(x => x.IdPattern == itemchill.Id).OrderBy(x => x.Id).ToList();
                                    if (getchill.Count() > 0)
                                    {
                                        lstchil.AddRange(getchill);
                                    }
                                    //lstid.Remove(itemchill.Id);
                                    lstchil.Remove(itemchill);
                                    string decriptions = string.Empty;
                                    switch ((DeviceType)itemchill.DeviceType)
                                    {
                                        case DeviceType.IsDesktop:
                                            decriptions = "<i class='fa fa-desktop'></i> PC" + " - " + LibraryCommon.TimeAgo(itemchill.CreateDate);
                                            break;
                                        case DeviceType.IsMobile:
                                            decriptions = "<i class='fa fa-mobile fa-lg'></i> Mobile " + itemchill.OS.Split('/')[0].Replace("Name:", "").Trim() + " - " + LibraryCommon.TimeAgo(itemchill.CreateDate);
                                            break;
                                        case DeviceType.IsTablet:
                                            decriptions = "<i class='fa fa-tablet fa-lg'></i> Tablet " + itemchill.OS.Split('/')[0].Replace("Name:", "").Trim() + " - " + LibraryCommon.TimeAgo(itemchill.CreateDate);
                                            break;
                                    }
                                    <div>
                                        <div class="media-block">
                                            <a class="media-left" href="#">
                                                @if (itemchill.Customer == null)
                                                {
                                                    <img class="img-circle img-sm" alt="Profile Picture" src="~/images/user.png">
                                                }
                                                else
                                                {
                                                    <img class="img-circle img-sm" alt="Profile Picture" src="~/Upload/Customer/@itemchill.Customer.Image">
                                                }
                                            </a>

                                            <div class="media-body">
                                                <div class="mar-btm">
                                                    <a href="#" class="btn-link text-semibold media-heading box-inline">@itemchill.FullName</a>
                                                    <p class="text-muted text-sm"> @Html.Raw(decriptions)</p>
                                                </div>
                                                <p> @Html.Raw(itemchill.Content)</p>
                                                <div class="pad-ver">
                                                    <a class="btn btn-sm btn-default btn-hover-primary btn-reply" data-pro="@Model.Product.Id" data-name="@itemchill.FullName" data-pattenid="@itemchill.Id" href="javascript:void(0)">Trả lời</a>
                                                </div>
                                                <hr>
                                            </div>
                                        </div>
                                    </div>
                                }




                                @* <div>
                                    <div class="media-block">
                                    <a class="media-left" href="#"><img class="img-circle img-sm" alt="Profile Picture" src="https://bootdey.com/img/Content/avatar/avatar2.png"></a>
                                    <div class="media-body">
                                    <div class="mar-btm">
                                    <a href="#" class="btn-link text-semibold media-heading box-inline">Bobby Marz</a>
                                    <p class="text-muted text-sm"><i class="fa fa-mobile fa-lg"></i> - From Mobile - 7 min ago</p>
                                    </div>
                                    <p>Sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</p>
                                    <div class="pad-ver">
                                    <div class="btn-group">
                                    <a class="btn btn-sm btn-default btn-hover-success active" href="#"><i class="fa fa-thumbs-up"></i> You Like it</a>
                                    <a class="btn btn-sm btn-default btn-hover-danger" href="#"><i class="fa fa-thumbs-down"></i></a>
                                    </div>
                                    <a class="btn btn-sm btn-default btn-hover-primary" href="#">Comment</a>
                                    </div>
                                    <hr>
                                    </div>
                                    </div>

                                    <div class="media-block">
                                    <a class="media-left" href="#">
                                    <img class="img-circle img-sm" alt="Profile Picture" src="https://bootdey.com/img/Content/avatar/avatar3.png">
                                    </a>
                                    <div class="media-body">
                                    <div class="mar-btm">
                                    <a href="#" class="btn-link text-semibold media-heading box-inline">Lucy Moon</a>
                                    <p class="text-muted text-sm"><i class="fa fa-globe fa-lg"></i> - From Web - 2 min ago</p>
                                    </div>
                                    <p>Duis autem vel eum iriure dolor in hendrerit in vulputate ?</p>
                                    <div class="pad-ver">
                                    <div class="btn-group">
                                    <a class="btn btn-sm btn-default btn-hover-success" href="#"><i class="fa fa-thumbs-up"></i></a>
                                    <a class="btn btn-sm btn-default btn-hover-danger" href="#"><i class="fa fa-thumbs-down"></i></a>
                                    </div>
                                    <a class="btn btn-sm btn-default btn-hover-primary" href="#">Comment</a>
                                    </div>
                                    <hr>
                                    </div>
                                    </div>
                                    </div>*@




                            </div>
                        }
                    </div>
                </div>
            </div>
        }


    </div>

</section>
<script src="~/lib/swiper/swiper-bundle.min.js"></script>
@section Scripts
{
@*    https://swiperjs.com/swiper-api#param-thumbs-swiper
    https://swiperjs.com/demos#zoom*@
<script>

       checkloadcontentProduct();
       loadProductInCategory(@(Model.Product.IdCategory));
        var mySwiper = new Swiper(".mySwiper-thumbs", {
        // loop: true,
        spaceBetween: 0,
        slidesPerView: 7,
        freeMode: true,
        zoom: {
            toggle: true,
            maxRatio: 5,
        },
        breakpoints: {
            // when window width is >= 320px
            320: {
                slidesPerView: 3,
                spaceBetween: 8
            },
            // when window width is >= 640px
            768: {
                slidesPerView: 4,
                spaceBetween: 7
            },
            991: {
                slidesPerView: 5,
                spaceBetween: 7
            }
        },
        keyboard: {
            enabled: true,
        },
        watchSlidesVisibility: true,
            watchSlidesProgress: true,
          centerInsufficientSlides: true,

          slideToClickedSlide: true
    });

    var swiper2 = new Swiper(".mySwiper2", {
        loop: true,
        observer: true,
        observeParents: true,
        observeChildren: true,
        spaceBetween: 0,

        // spaceBetween: 10,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev"
        },

        pagination: {
            el: ".swiper-pagination",
            clickable: true,
            type: "fraction",
        },
        keyboard: {
            enabled: true,
        },
        effect: 'coverflow',
        coverflowEffect: {
            rotate: 60,
            slideShadows: false,
        },
        on: {
            slideChange: function () {
              let activeIndex = this.activeIndex + 1;

                        let activeSlide = document.querySelector(`.mySwiper-thumbs .swiper-slide:nth-child(${activeIndex})`);
              let nextSlide = document.querySelector(`.mySwiper-thumbs .swiper-slide:nth-child(${activeIndex + 1})`);
              let prevSlide = document.querySelector(`.mySwiper-thumbs .swiper-slide:nth-child(${activeIndex - 1})`);

              if (nextSlide && !nextSlide.classList.contains('swiper-slide-visible')) {
                  this.thumbs.swiper.slideNext()
              } else if (prevSlide && !prevSlide.classList.contains('swiper-slide-visible')) {
                  this.thumbs.swiper.slidePrev()
              }

            }
          },
        thumbs: {
            swiper: mySwiper,
            slideThumbActiveClass: 'swiper-slide-thumb-active',
             autoScrollOffset:1
        }
    });




    var mySwipermodel = new Swiper(".mySwipermodel", {
         spaceBetween: 0,
        slidesPerView: 7,
        freeMode: true,
        zoom: {
            toggle: true,
            maxRatio: 5,
        },
        breakpoints: {
            // when window width is >= 320px
            320: {
                slidesPerView: 3,
                spaceBetween: 8
            },
            // when window width is >= 640px
            768: {
                slidesPerView: 5,
                spaceBetween: 7
            },
            991: {
                slidesPerView: 5,
                spaceBetween: 7
            }
        },
        keyboard: {
            enabled: true,
        },
        watchSlidesVisibility: true,
            watchSlidesProgress: true,
          centerInsufficientSlides: true,

          slideToClickedSlide: true
    });


    var swiperModal = new Swiper('.swiper-container-modal', {
        parallax: true,
        observer: true,
        observeParents: true,
        observeChildren: true,
        //spaceBetween: 0,
        navigation: {
            nextEl: '.swiper-button-next2',
            prevEl: '.swiper-button-prev2',
        },
        pagination: {
            el: ".swiper-pagination",
            clickable: true,
            type: "fraction",
        },
        zoom: {
            maxRatio: 2,
            toggle: true, // enable zoom-in by double tapping slide
        },
        loop: true,
        preloadImages: false,
        // Enable lazy loading
        lazy: true,
        lazy: {
            loadPrevNext: true,
            //loadOnTransitionStart: true,
        },


        effect: 'coverflow',
        coverflowEffect: {
            rotate: 60,
            slideShadows: false,
        },on: {
            slideChange: function () {
              let activeIndex = this.activeIndex + 1;

                        let activeSlide = document.querySelector(`.mySwiper-thumbs .swiper-slide:nth-child(${activeIndex})`);
              let nextSlide = document.querySelector(`.mySwipermodel .swiper-slide:nth-child(${activeIndex + 1})`);
              let prevSlide = document.querySelector(`.mySwipermodel .swiper-slide:nth-child(${activeIndex - 1})`);

              if (nextSlide && !nextSlide.classList.contains('swiper-slide-visible')) {
                  this.thumbs.swiper.slideNext()
              } else if (prevSlide && !prevSlide.classList.contains('swiper-slide-visible')) {
                  this.thumbs.swiper.slidePrev()
              }

            }
          },
        thumbs: {
            swiper: mySwipermodel,
            slideThumbActiveClass: 'swiper-slide-thumb-active',
            autoScrollOffset:1
        }


    });



    // Create a Modal With HTML, CSS & JavaScript (https://www.youtube.com/watch?v=6ophW7Ask_0)
    const nonModalGalleryImgContainer = document.querySelector(
        '.mySwiper2'
    );
    const nonModalGalleryImgWrapper = nonModalGalleryImgContainer.querySelector(
        '.swiper-wrapper'
    );
    // Get modal element
    var modal = document.getElementById('simpleModal');
    // Get open modal button
    var modalBtn = document.querySelectorAll('.swiper-slide-img'); // select all swiper-slides (outside modal)
    // close button
    var closeBtn = document.getElementsByClassName('closeBtn')[0]; // returns an array... just get first one (only one element with this class)

    function openModal() {

        // prevent page scrolling when modal open: https://css-tricks.com/prevent-page-scrolling-when-a-modal-is-open/
        // When the modal is shown, we want a fixed body
        // document.body.style.position = 'fixed'; // prevents scrolling
        // document.body.style.top = `-${window.scrollY}px`; // subtract scroll top, add to body styles
        document.body.style.overflow = "hidden";
        // $("#simpleModal").modal("show");

        modal.style.display = 'block';

        let swiperIndexPos = swiper2.activeIndex;

        swiperModal.slideTo(swiperIndexPos);
        // swiperModal.clickedIndex(swiperIndexPos);
        //mySwipermodel.init();
        // mySwipermodel.clickedIndex;

        swiperModal.lazy.load(); // need to initailize lazy load if modal opened
        swiperModal.update();


        swiper2.keyboard.disable();
        swiper2.navigation.destroy();

        swiperModal.keyboard.enable();
        swiperModal.navigation.update()
        swiperModal.navigation.init();
        document.addEventListener('keydown', closeModalWithKeyboard);


    }

    modalBtn.forEach(element => {
        element.addEventListener('click', openModal); // add an click event listener for each swiper-slide (outside the modal)
    })

    function openModalWithKeyboard(event) {
        if (event.key === 'Enter') {
            openModal();
        }
    }

    // open modal if non-modal image wrapper is in focus and enter is hit
    nonModalGalleryImgContainer.addEventListener('keydown', openModalWithKeyboard);


    function closeModal() {
        // prevent page scrolling when modal open: https://css-tricks.com/prevent-page-scrolling-when-a-modal-is-open/
        // When the modal is hidden...
        //const scrollY = document.body.style.top; // retrieve scroll location
        //document.body.style.position = '';
        // document.body.style.top = '';
        document.body.style.overflow = "";
        // window.scrollTo(0, parseInt(scrollY || '0') * -1);

        //$("#simpleModal").modal("hide");


        let swiperModalIndexPos = swiperModal.activeIndex;
        swiper2.slideTo(swiperModalIndexPos);



        modal.style.display = 'none';


        swiperModal.keyboard.disable();
        swiperModal.navigation.destroy();

        swiper2.keyboard.enable();
        swiper2.navigation.init();
        document.removeEventListener('keydown', closeModalWithKeyboard);
    }

    // Listen for close click
    closeBtn.addEventListener('click', closeModal);

    // close modal using Escape key
    function closeModalWithKeyboard(event) {
        if (event.key === 'Escape') {
            closeModal();
        }
    }


    (function($) {
        $(document).ready(function() {
            $('.show').bind('click', function(event) {

                var images = new Array();
                $(".show-small-img").each(function(index) {
                    var data = this.src;
                    images[index] = {
                        src: data
                    };
                });

                $.magnificPopup.open({
                    items: images,
                    type: 'image',
                    gallery: {
                        enabled: true
                    }
                });
                // event.preventDefault();

            });
            $('.slide-product').slick({
                slidesToShow: 4,
                slidesToScroll: 1,
                dots: false,
                centerMode: false,
                infinite: false,
                focusOnSelect: true,
                responsive: [{
                        breakpoint: 1025,
                        settings: {
                            slidesToShow: 4,
                            slidesToScroll: 1
                        }
                    },
                    {
                        breakpoint: 991,
                        settings: {
                            slidesToShow: 3
                        }
                    },
                    {
                        breakpoint: 767,
                        settings: {
                            slidesToShow: 2
                        }
                    }
                ]
            });


            //$('#POPIMG').magnificPopup({
            //    delegate: 'img', // child items selector, by clicking on it popup will open
            //    type: 'image'
            //    // other options
            //});
        });
    })(jQuery);
</script>
}